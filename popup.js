document.addEventListener('DOMContentLoaded', function() {
    var checkPageButton = document.getElementById('checkPage');
    checkPageButton.addEventListener('click', function() {
  
        chrome.tabs.executeScript( null, {
           code: "var x = document.getElementsByClassName('title may-blank'); var date = new Date(); var now_utc = date.getUTCHours(); var timeDiff = date.getHours() - now_utc; var i = 0; for (i = 0; i < x.length; i++) { var nextDay = 0; if (x[i].innerHTML.includes('UTC')) { console.log('i'+i); var str = x[i].innerHTML.substring(x[i].innerHTML.lastIndexOf('UTC') - 1, x[i].innerHTML.lastIndexOf('UTC') - 6); var str_og = str; var now = new Date(); var now_utc = Date.UTC(now.getFullYear(), now.getMonth(), now.getDate(), now.getHours(), now.getMinutes(), now.getSeconds(), now.getMilliseconds()); str = str.replace(':', ''); var now_hours = str.substring(0, 2); var now_minutes = str.substring(2); var now_time = (parseInt(now_hours) * 60) + parseInt(now_minutes); var timeDiff = 0; var debug = x[i].innerHTML.substring((x[i].innerHTML.indexOf('&lt') + 1), x[i].innerHTML.indexOf('&gt')); if (debug.includes(str_og)) { debug = debug.substring(0, debug.indexOf(str_og)); } debug = debug.substring(3); debug = debug.replace(' ', ''); var DateFormat = 0; var RunYear = debug.substring(0, 4); var RunMonth; var RunDay; if (isNaN(RunYear)) { if (RunYear.includes('-')) { RunYear = debug.substring(6); RunMonth = debug.substring(3, 6); RunDay = debug.substring(0, 2); DateFormat = 2; if(isNaN(RunYear) || isNaN(RunMonth) || isNaN(RunDay)){ RunYear = debug.substring(5); RunMonth = debug.substring(3, 5); RunDay = debug.substring(0, 2); DateFormat = 3; } } else { RunYear = debug.substring(5); RunMonth = debug.substring(2, 5); RunDay = debug.substring(0, 2); DateFormat = 1; } } else { RunMonth = debug.substring(5, 7); RunDay = debug.substring(8); } console.log('UTC:'+now_utc+'|now'+now.getTime()); if (now_utc > now.getTime()) { console.log('UTC>NOW'); timeDiff = (now_utc - now.getTime()) / 1000; timeDiff = timeDiff / 60; timeDiff = (now_time + timeDiff) / 60; now_time = ((timeDiff % 1) * 60).toFixed(0); timeDiff = Math.floor(timeDiff); } else if (now_utc < now.getTime()) { console.log('NOW>UTC'); timeDiff = (now.getTime() - now_utc) / 1000; timeDiff = timeDiff / 60; console.log('Time'+timeDiff); timeDiff = (now_time - timeDiff) / 60; now_time = ((timeDiff % 1) * 60).toFixed(0); timeDiff = Math.floor(timeDiff); } else { console.log('EQUAL'); timeDiff = now_hours; now_time = now_minutes; } if (timeDiff >= 24) { timeDiff = timeDiff - 24; nextDay = 1; } if (timeDiff < 0) { timeDiff = timeDiff + 24; nextDay = 2; } if (now_time < 0) { now_time = now_time * (-1); } if (now_time.length == 1) { now_time = '0' + now_time; } timeDiff = timeDiff + ''; if (timeDiff.length == 1) { timeDiff = '0' + timeDiff; } if (nextDay == 0) { x[i].innerHTML = x[i].innerHTML.replace(str_og + ' UTC', timeDiff + ':' + now_time + ' LOCAL TIME'); } else if (nextDay == 1) { RunDay = parseInt(RunDay)+1; switch(DateFormat){ case 0: switch (RunMonth){ case 1: if(RunDay>31){ RunMonth = 2; } break; case 2: if((RunYear % 4 == 0) && (RunYear % 100 != 0) || (RunYear % 400 == 0)){ if(RunDay>29){ RunMonth = 3; } }else{ if(RunDay>28){ RunMonth = 3; } } break; case 3: if(RunDay>31){ RunMonth = 4; } break; case 4: if(RunDay>30){ RunMonth = 5; } break; case 5: if(RunDay>31){ RunMonth = 6; } break; case 6: if(RunDay>30){ RunMonth = 7; } break; case 7: if(RunDay>31){ RunMonth = 8; } break; case 8: if(RunDay>31){ RunMonth = 9; } break; case 9: if(RunDay>30){ RunMonth = 10; } break; case 10: if(RunDay>31){ RunMonth = 11; } break; case 11: if(RunDay>31){ RunMonth = 12; } break; case 12: if(RunDay>31){ RunMonth = 1; RunYear = parseInt(RunYear)+1; } break; } x[i].innerHTML = x[i].innerHTML.replace(debug, 'LOCAL DATE: ' + RunYear + '-' + RunMonth + '-' + RunDay); break; case 1: RunMonth = RunMonth.toLocaleLowerCase(); switch (RunMonth){ case 'jan': if(RunDay>31){ RunMonth = 2; } break; case 'feb': if((RunYear % 4 == 0) && (RunYear % 100 != 0) || (RunYear % 400 == 0)){ if(RunDay>29){ RunMonth = 3; } }else{ if(RunDay>28){ RunMonth = 3; } } break; case 'mar': if(RunDay>31){ RunMonth = 4; } break; case 'apr': if(RunDay>30){ RunMonth = 5; } break; case 'may': if(RunDay>31){ RunMonth = 6; } break; case 'jun': if(RunDay>30){ RunMonth = 7; } break; case 'jul': if(RunDay>31){ RunMonth = 8; } break; case 'aug': if(RunDay>31){ RunMonth = 9; } break; case 'sep': if(RunDay>30){ RunMonth = 10; } break; case 'oct': if(RunDay>31){ RunMonth = 11; } break; case 'nov': if(RunDay>31){ RunMonth = 12; } break; case 'dec': if(RunDay>31){ RunMonth = 1; RunYear = parseInt(RunYear)+1; } break; } x[i].innerHTML = x[i].innerHTML.replace(debug, 'LOCAL DATE: ' + RunYear + '-' + RunMonth + '-' + RunDay); break; case 2: RunMonth = RunMonth.toLocaleLowerCase(); switch (RunMonth){ case 'jan': if(RunDay>31){ RunMonth = 2; } break; case 'feb': if((RunYear % 4 == 0) && (RunYear % 100 != 0) || (RunYear % 400 == 0)){ if(RunDay>29){ RunMonth = 3; } }else{ if(RunDay>28){ RunMonth = 3; } } break; case 'mar': if(RunDay>31){ RunMonth = 4; } break; case 'apr': if(RunDay>30){ RunMonth = 5; } break; case 'may': if(RunDay>31){ RunMonth = 6; } break; case 'jun': if(RunDay>30){ RunMonth = 7; } break; case 'jul': if(RunDay>31){ RunMonth = 8; } break; case 'aug': if(RunDay>31){ RunMonth = 9; } break; case 'sep': if(RunDay>30){ RunMonth = 10; } break; case 'oct': if(RunDay>31){ RunMonth = 11; } break; case 'nov': if(RunDay>31){ RunMonth = 12; } break; case 'dec': if(RunDay>31){ RunMonth = 1; RunYear = parseInt(RunYear)+1; } break; } x[i].innerHTML = x[i].innerHTML.replace(debug, 'LOCAL DATE: ' + RunYear + '-' + RunMonth + '-' + RunDay); break; case 3: switch (RunMonth){ case 1: if(RunDay>31){ RunMonth = 2; } break; case 2: if((RunYear % 4 == 0) && (RunYear % 100 != 0) || (RunYear % 400 == 0)){ if(RunDay>29){ RunMonth = 3; } }else{ if(RunDay>28){ RunMonth = 3; } } break; case 3: if(RunDay>31){ RunMonth = 4; } break; case 4: if(RunDay>30){ RunMonth = 5; } break; case 5: if(RunDay>31){ RunMonth = 6; } break; case 6: if(RunDay>30){ RunMonth = 7; } break; case 7: if(RunDay>31){ RunMonth = 8; } break; case 8: if(RunDay>31){ RunMonth = 9; } break; case 9: if(RunDay>30){ RunMonth = 10; } break; case 10: if(RunDay>31){ RunMonth = 11; } break; case 11: if(RunDay>31){ RunMonth = 12; } break; case 12: if(RunDay>31){ RunMonth = 1; RunYear = parseInt(RunYear)+1; } break; } x[i].innerHTML = x[i].innerHTML.replace(debug, 'LOCAL DATE: ' + RunYear + '-' + RunMonth + '-' + RunDay); ; break; } x[i].innerHTML = x[i].innerHTML.replace(str_og + ' UTC', timeDiff + ':' + now_time + ' LOCAL TIME || UTC DATE: ' + debug + ' UTC TIME: ' + str_og); } else if (nextDay == 2) { RunDay = parseInt(RunDay)+1; switch(DateFormat){ case 0: switch (RunMonth){ case 1: if(RunDay>1){ RunDay = 31; RunMonth = 12; RunYear = parseInt(RunYear)-1; } break; case 2: if(RunDay>1){ RunDay = 31; RunMonth = 1; } break; case 3: if(RunDay>1){ if((RunYear % 4 == 0) && (RunYear % 100 != 0) || (RunYear % 400 == 0)){ RunDay = 29; }else{ RunDay = 28; } RunMonth = 2; } break; case 4: if(RunDay>1){ RunDay = 31; RunMonth = 3; } break; case 5: if(RunDay>1){ RunDay = 30; RunMonth = 4; } break; case 6: if(RunDay>1){ RunDay = 31; RunMonth = 5; } break; case 7: if(RunDay>31){ RunDay = 30; RunMonth = 6; } break; case 8: if(RunDay>1){ RunDay = 31; RunMonth = 7; } break; case 9: if(RunDay>1){ RunDay = 31; RunMonth = 8; } break; case 10: if(RunDay>1){ RunDay = 30; RunMonth = 9; } break; case 11: if(RunDay>1){ RunDay = 31; RunMonth = 10; } break; case 12: if(RunDay<1){ RunDay = 30; RunMonth = 11; } break; } case 1: RunMonth = RunMonth.toLocaleLowerCase(); switch (RunMonth){ case 'jan': if(RunDay>1){ RunDay = 31; RunMonth = 12; RunYear = parseInt(RunYear)-1; } break; case 'feb': if(RunDay>1){ RunDay = 31; RunMonth = 1; } break; case 'mar': if(RunDay>1){ if((RunYear % 4 == 0) && (RunYear % 100 != 0) || (RunYear % 400 == 0)){ RunDay = 29; }else{ RunDay = 28; } RunMonth = 2; } break; case 'apr': if(RunDay>1){ RunDay = 31; RunMonth = 3; } break; case 'may': if(RunDay>1){ RunDay = 30; RunMonth = 4; } break; case 'jun': if(RunDay>1){ RunDay = 31; RunMonth = 5; } break; case 'jul': if(RunDay>31){ RunDay = 30; RunMonth = 6; } break; case 'aug': if(RunDay>1){ RunDay = 31; RunMonth = 7; } break; case 'sep': if(RunDay>1){ RunDay = 31; RunMonth = 8; } break; case 'oct': if(RunDay>1){ RunDay = 30; RunMonth = 9; } break; case 'nov': if(RunDay>1){ RunDay = 31; RunMonth = 10; } break; case 'dec': if(RunDay<1){ RunDay = 30; RunMonth = 11; } break; } x[i].innerHTML = x[i].innerHTML.replace(debug, 'LOCAL DATE: ' + RunYear + '-' + RunMonth + '-' + RunDay); break; case 2: RunMonth = RunMonth.toLocaleLowerCase(); switch (RunMonth){ case 'jan': if(RunDay>1){ RunDay = 31; RunMonth = 12; RunYear = parseInt(RunYear)-1; } break; case 'feb': if(RunDay>1){ RunDay = 31; RunMonth = 1; } break; case 'mar': if(RunDay>1){ if((RunYear % 4 == 0) && (RunYear % 100 != 0) || (RunYear % 400 == 0)){ RunDay = 29; }else{ RunDay = 28; } RunMonth = 2; } break; case 'apr': if(RunDay>1){ RunDay = 31; RunMonth = 3; } break; case 'may': if(RunDay>1){ RunDay = 30; RunMonth = 4; } break; case 'jun': if(RunDay>1){ RunDay = 31; RunMonth = 5; } break; case 'jul': if(RunDay>31){ RunDay = 30; RunMonth = 6; } break; case 'aug': if(RunDay>1){ RunDay = 31; RunMonth = 7; } break; case 'sep': if(RunDay>1){ RunDay = 31; RunMonth = 8; } break; case 'oct': if(RunDay>1){ RunDay = 30; RunMonth = 9; } break; case 'nov': if(RunDay>1){ RunDay = 31; RunMonth = 10; } break; case 'dec': if(RunDay<1){ RunDay = 30; RunMonth = 11; } break; } x[i].innerHTML = x[i].innerHTML.replace(debug, 'LOCAL DATE: ' + RunYear + '-' + RunMonth + '-' + RunDay); break; case 3: switch (RunMonth){ case 1: if(RunDay>1){ RunDay = 31; RunMonth = 12; RunYear = parseInt(RunYear)-1; } break; case 2: if(RunDay>1){ RunDay = 31; RunMonth = 1; } break; case 3: if(RunDay>1){ if((RunYear % 4 == 0) && (RunYear % 100 != 0) || (RunYear % 400 == 0)){ RunDay = 29; }else{ RunDay = 28; } RunMonth = 2; } break; case 4: if(RunDay>1){ RunDay = 31; RunMonth = 3; } break; case 5: if(RunDay>1){ RunDay = 30; RunMonth = 4; } break; case 6: if(RunDay>1){ RunDay = 31; RunMonth = 5; } break; case 7: if(RunDay>31){ RunDay = 30; RunMonth = 6; } break; case 8: if(RunDay>1){ RunDay = 31; RunMonth = 7; } break; case 9: if(RunDay>1){ RunDay = 31; RunMonth = 8; } break; case 10: if(RunDay>1){ RunDay = 30; RunMonth = 9; } break; case 11: if(RunDay>1){ RunDay = 31; RunMonth = 10; } break; case 12: if(RunDay<1){ RunDay = 30; RunMonth = 11; } break; } x[i].innerHTML = x[i].innerHTML.replace(debug, 'LOCAL DATE: ' + RunYear + '-' + RunMonth + '-' + RunDay); break; } x[i].innerHTML = x[i].innerHTML.replace(str_og + ' UTC', timeDiff + ':' + now_time + ' LOCAL TIME || UTC DATE: ' + debug + ' UTC TIME: ' + str_og); } } }"
        }, function findDate(){} );
    }, false);
  }, false);



  
 